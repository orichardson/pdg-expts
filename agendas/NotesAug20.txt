WHy is it the right thing to do? 
What is the problem I'm trying to solve?


First step: I've represented deterministic database <--> PDG

"You're tweaking the semantics of a database in such a way that you can represent the probabilities.

Why is the representation intoduced before problematic?
How is this representation solving those problems? What other benefits do you think it has?

---------------------------

Joint error correction
Integrate ML models
Assumptions about independence

"Problem: the way we think of a possible world in a PDG; there is a mismatch bewteen a possible instantiation of a database" 

Show me what PDGs can help database people with.



Here's the problem I'm solve
Here's why it's interesting
Here are instances 
Why it's non-trivial to solve the problem.

A clear explanation of the problem, why to care, everything needs to be motivated.

-----------------------------

Factor graphs & world fragments
Query language: operations on the PDG

How does the trace semantics relate to the database?

Examples:
 - A factor graph F1 G1
 
 
 
 
 Suggested a way of viewing as a distribution over databases.  