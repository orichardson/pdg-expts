# Created 2020-07-07 Tue 00:21
#+TITLE: PDG Queries
#+AUTHOR: Oliver Richardson

* Queries
** Draw a distinction between being certain (high β) and caring a lot about a query marginal.
** Specify a family of algorithms for finiding the margianl.

Figure out the complexity concerns associated with these.
Do different queries fall into different classes, as in the Vardi paper?

** Figure out how databases work.
**** Table ↭  PDG Correspondence

| R1 | A  | B  | C  |
|----+----+----+----|
| r1 | a1 | b1 | c1 |
| r2 | a2 | b2 | c2 |

This corresponds to the database schema
    R1 \to A \times B \times C
and an instance with
- R1 = {1,2},
- {a1,a2} \subset A
- {b1,b2} \subset B
- {c1,c2} \subset C

**** Issues :Issues:
***** Coherence, Infinite Scores, Wrong Interpretation.
****** Example: Employee + Department :example:
Consider the Tables

| Department | secretary | manager |
|------------+-----------+---------|
| Sales      | Alice     | Bob     |
| Marketing  | Carl      | Dianne  |

and

| Employee | first name | last name | SSN | WorksIn   |
|----------+------------+-----------+-----+-----------|
| Alice    | Allie      | Smith     |   4 | Sales     |
| Bob      | Robert     | Baker     |   2 | Sales     |
| Carl     | Carnelious | Qi        |  11 | Marketing |
| Dianne   | Dianna     | Jargol    | 333 | Marketing |

There are two employee referenes in department (corresponding to parallel) edges
in the structure diagram, but any joint distribution over [Employee, Department]
will not contain this information.

Note: a distribution over (emp, dept, arrow) makes sense to score (for a
deterministic database, return prior on source, and corresponding posterior on
target), but it is not clear that a joint distribution of this kind will contain
exactly the right information. It is unsatisfying, for instance, that we have to
weigh "Department=Sales" against "Department=Marketing" when clearly both exist.

This can also be interpreted as a feature: it is "self-attention", and
represents focus. At either extreme, a department with probability \epsilon \approx 0 it is
unlikely that anyone works in, and an employee with small probability likely is
not a manager / secretary of any department.

****** Potential Resolutions

Many of the more satisfying solutions require us to effectively copy variables...

- Mark certain nodes as "coppied", so that effectively they are duplicated for every edge leading to them.
- Similarly, mark some arrows as "duplicating".
- Similarly, mark 2-cells as "commuting" or "non-commuting"
  (in the above, we have f_name and l_name non-commuting)
- Use \beta's, to effectively look at only one edge at a time?
- Have a heirarchy / poset, so that using a reference to a lower-level item duplicates it.


We might also be able to simply extend our semantics so that it scores not only joint distributions, but also

- Distributions over trees / polytrees / flows
- Distributions over paths
