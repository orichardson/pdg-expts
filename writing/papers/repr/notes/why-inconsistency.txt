Why do inconsistencies arise?
	- They were correct at one point, but because you're storing tables and the world changes around you, the tables get out of date. Inconsistency.
		Note: in this setting, it's useful to know that your tables are out of date, rather than just making sure that you use the correct table!


	I said that probability distributions are enough so long as you chose the right representation, even compared to inconsistency, etc. Moreover, most of the uesful ones will still factor along local pieces. So why not just find the right representation right at the beginning, and then use BNs or factor graphs to represent it?
		> Because it may be difficult to maintain. The world changes, you make observations; do you really want to be maintaining a distribution? No! What about a BN? Possibly. But there are all sorts of issues, such as the ones I bring up (e.g., W -> L <- S x C) in which acquiring new knowledge is not easy to put into a BN, even if is differentially the right thing to track along edges.

		> Because it may not correctly capture the things you want to say. Take the example I had before.

		> Because this way you can use the normalizations and constraints as extra sanity checks. Same reason that people write tests, even when they're sure their code works.

	 Note similarity to: why not just use assembly for everything?\
