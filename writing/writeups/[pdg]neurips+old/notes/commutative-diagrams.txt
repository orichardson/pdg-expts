Regarding the commutative diagrams, I'm going to fight a little harder.  If you had to point to one mathematical fact, would you say is the fundamental representational change we made that got us inconsistency?

I think we can both agree it's the representation of the edges. We say this a lot in the introduction. What's different? Instead of assigning a function 
I claim that an unweighted PDG (N,E V, p) is immediately, a diagram, with zero work required. As you may be rusty with your categorical definitions, I'll spell it out:
 (N, E) is a graph (its paths are the index category), and  (V,p) are exactly the data of a functor;the first assigns any object (node) X in N to a set of values (the object in the target category), whilethe second assigns any morphism (edge/path) L:X->Y in E to a probabilistic function p_L :  V(X) ~~> V(Y).      Now, I said "commutative diagram" partly because "diagram" is overloaded, but also it is true that not commuting is closely related to inconsistency. Spelling this out is a subject for another paper, but to a first approximation, note that a BN cannot express a cycle say a square) that a PDG does which is what people normally think of as a commutative diagram; by contrast, the PDG is In the deterministic case,  a PDG which looks like a square below

     A -- f --> B
     |          |
f'   |          |  g
     v          v
     C -- g' -> D

has semantics [[ M ]]_sd  =  {  all distributions on a  for which  g(f(a)) = g'(f'(a)) }and the diagram commutes iff [[ M ]]_sdAll I want is a short mention in the conclusion, and I think once you say the word "commutative diagram", anybody who both (1) knows what they are, and (2) is not primed to shoot down category theoretic langauge immediately,  will know why.
