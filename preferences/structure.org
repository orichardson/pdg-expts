;#+STARTUP: indent

* TASKS
** TODO Figure out how to use org mode.
** TODO create a merged document for Joe


* STRUCTURE OF DOCUMENT

** Value Representations

Unification of preferences, utilities, matrices, small-number-of-states, utility distributions, goals, desires.

** Introduction / Overview


** Motivations

*** Stop drawing distinction between values and tools which is harmful
*** 
Problem with worlds as products of variables: implicitly they are right-handed handed, co-inductive types. What if you want inductive types instead?

** Static Model

*** Examples

*** Formal Definition

*** Things You can Do

**** Replacement of BN's

**** Some factor graphs

**** Constraint satisfaction. Correlary: NP-hard

**** 

* Worries
** Impossible to be both more general and require less
Fact: the total number of degrees of freedom in the system is some fixed number. As a result, it is impossible to both (1) be completely general, and (2) require very few inputs from users.

The point of preferences is to capture everything, and so they factor out a great deal of the complexity, in turn passing it on to the user. If a complaint is that they do not

** matrices might be evil

If there are multiple ways of embedding things as matrices (prefrences, for instance, can be encoded as 1 / 0, with addition and multiplication, but also with min/max, and as a symmetric matrix...) then perhaps operations I defined for orders in terms of their representations (matrices, guaranteed to exist) will only hold for some of the representatives andnot others. You can make a cannonical choice of definition, but while technically not wrong it is evil.


As a result, I have to prove coherence results for things, to make sure that every operation is representation-independent. But changes of representation are sometimes meant to do things in my framework. If I want to argue that you really need a matrix to do things properly, I Am not then entitled to say it's more general: I'm actually requiring more things from my users.


** Are you not just opitmizing for something different?
VnM / Savage says everyone is optimizing for something implicitly. You're even optimizing explicitly. What gives?

*** 
- This is what entropy term is for: general uncertainty, to spread out distribution. 
- These are all in cases where the representation is fixed. When representation can move, none of the results make quite as much sense anymore.




* To Fold In Later
  
** 
** Categorical Picture
   
*** Co-slices and Slices.

A setting where you have a probability distribution on everything is a co-slice category under (1). If you have a utility for everything, you are in a slice category over (U). This makes utilities that can be altered like fibred cateogiries.

*** Composition of Links: Max Entropy 
I have already proved that any model in the center is compatible with 


*** Sheaf Condition:
I'm defining a bunch of local constraints, and that the local agree on their overlap is exactly what's required to be a sheaf. The math is a bit complex and I'm not a topos theorist, so I should leave this for now, but... someday.

** Distributional rock paper scissors: cyclic gamble Preferences.

** Folk Wisdom

*** Spoiled people are less good at being people

*** You should not look further than you can see



* Examples
** Of the way it impacts culture:
*** Optimizing for things is highly prized
Maximize profits, shareholder value, get high score, max points, etc. The points capture values because that's how humans work, and then people think the points are the things that matter (which they don't; the problem is not enough things have been captured, and we don't then make metric metrics)

*** 
[what was I thinking about in the bathroom?]

** Of having inconsistent preferences

*** Customization options (e.g., emacs)

Had preference for newer software over older (esp when faster / cleaner), so wanted emacs 26. Separeately, wanted certain custmoization options I couldn't find in emacs26 and had a preference for not changing things. These two preferences were in conflict and in this particular case, they got resolved with additional information specific to the setting, only marginally nudging the general preferences they were cloned from.

*** Difficult Binary preferences 
I want to eat chips but I also don't want to get fat.

* FAQ
** How does the category theory fit in?

*** It describes mathematics: the way people think formally



 Real humans don't use their snap judgements for everything. It'd be incredibly difficult to do this.

  - Imagine if you had to write an essay in one shot, without any organizational headers. The best way to do this is definitely to
  - 

 You can think of reinfocement learning as pressing this button really hard.


*** It can be used to unify existing preference models

 Because most math can be cleanly embedded in category theory, this gives us a natural way to talk about exactly how they relate to each other. This is category theory's greatest strength: putting many related things in the same terms so it's clearer how they relate to one another




* Goals

**  Figure out how generalized preferences flow (backwards). 
Note: this might have something to do with 

** Reconcile backwards flow picture with joint distribution picture.
